name: Cron Builder CI

on:
  workflow_dispatch:
  schedule:
    - cron: "5 11 * * *"

jobs:
  latest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Enviroment Variables
        id: variables
        env:
          DOCKERHUB_IMAGE: vcxpz/jackett
          DOCKERIMAGE_TAG: latest
        run: |
          echo "::set-output name=DOCKERHUB_IMAGE::$DOCKERHUB_IMAGE"
          echo "::set-output name=DOCKERIMAGE_TAG::$DOCKERIMAGE_TAG"
          echo "::set-output name=JACKETT_RELEASE::$(curl -sX GET "https://api.github.com/repos/Jackett/Jackett/releases/latest"| jq -r .tag_name | cut -c 2-)"

      - name: Docker Login
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u vcxpz --password-stdin

      - name: Github Login
        env:
          GIT_USER: ${{ steps.variables.outputs.GIT_USER }}
        run: |
          git config --global user.email "alexanderhyde@icloud.com"
          git config --global user.name "hydazz"

      - name: Build The Docker Image
        env:
          DOCKERHUB_IMAGE: ${{ steps.variables.outputs.DOCKERHUB_IMAGE }}
          JACKETT_RELEASE: ${{ steps.variables.outputs.JACKETT_RELEASE }}
        run: |
          docker build --no-cache --pull . --file Dockerfile --build-arg JACKETT_RELEASE="$JACKETT_RELEASE" --build-arg BUILD_DATE="$(date +%Y-%m-%d)" --tag "$DOCKERHUB_IMAGE":cibuild

      - name: Get New Package Versions From Image
        id: packages
        env:
          DOCKERHUB_IMAGE: ${{ steps.variables.outputs.DOCKERHUB_IMAGE }}
        run: |
          echo "::set-output name=OLD_MD5::$(md5sum package_versions.txt | awk '{ print $1 }')"
          docker run --rm --entrypoint '/bin/sh' -v "$PWD":/tmp "$DOCKERHUB_IMAGE":cibuild -c '\
            apk info -v | sort >/tmp/package_versions.txt'
          echo "::set-output name=NEW_MD5::$(md5sum package_versions.txt | awk '{ print $1 }')"
          echo "::set-output name=OLD_JACKETT_RELEASE::$(cat version_info.json | jq -r .jackett_release)"

      - name: Update README.md
        id: readme
        env:
          JACKETT_RELEASE: ${{ steps.variables.outputs.JACKETT_RELEASE }}
        run: |
          echo "::set-output name=OLD_MD5::$(md5sum README.md | awk '{ print $1 }')"
          chmod +x update_version_info.sh && ./update_version_info.sh
          echo "::set-output name=NEW_MD5::$(md5sum README.md | awk '{ print $1 }')"

      - name: Commit And Push Changes To Github
        if: steps.variables.outputs.JACKETT_RELEASE != steps.packages.outputs.OLD_JACKETT_RELEASE
        run: |
          git add -A
          git commit -m 'Bot Updating Files'
          git push

      - name: Tag And Push Docker Image
        if: steps.variables.outputs.JACKETT_RELEASE != steps.packages.outputs.OLD_JACKETT_RELEASE
        env:
          DOCKERHUB_IMAGE: ${{ steps.variables.outputs.DOCKERHUB_IMAGE }}
          DOCKERIMAGE_TAG: ${{ steps.variables.outputs.DOCKERIMAGE_TAG }}
        run: |
          docker tag "$DOCKERHUB_IMAGE":cibuild "$DOCKERHUB_IMAGE":"$DOCKERIMAGE_TAG"
          docker push "$DOCKERHUB_IMAGE":"$DOCKERIMAGE_TAG"

      - name: Push README.md To Docker Hub
        uses: peter-evans/dockerhub-description@v2
        with:
          username: vcxpz
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ steps.variables.outputs.DOCKERHUB_IMAGE }}
